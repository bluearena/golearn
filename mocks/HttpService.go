// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import golearn "github.com/sergeiten/golearn"
import http "net/http"
import mock "github.com/stretchr/testify/mock"

// HttpService is an autogenerated mock type for the HttpService type
type HttpService struct {
	mock.Mock
}

// Parse provides a mock function with given fields: r
func (_m *HttpService) Parse(r *http.Request) (*golearn.Update, error) {
	ret := _m.Called(r)

	var r0 *golearn.Update
	if rf, ok := ret.Get(0).(func(*http.Request) *golearn.Update); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*golearn.Update)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Send provides a mock function with given fields: update, message, keyboard
func (_m *HttpService) Send(update *golearn.Update, message string, keyboard string) error {
	ret := _m.Called(update, message, keyboard)

	var r0 error
	if rf, ok := ret.Get(0).(func(*golearn.Update, string, string) error); ok {
		r0 = rf(update, message, keyboard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
